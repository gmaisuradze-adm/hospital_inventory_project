# Generated by Django 4.2.21 on 2025-05-26 09:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StockItemCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category of the stock item (e.g., Cables, Toners, Peripherals).', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Stock Item Category',
                'verbose_name_plural': 'Stock Item Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockItemSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Stock Item Supplier',
                'verbose_name_plural': 'Stock Item Suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.CharField(help_text='Unique identifier for the stock item (e.g., SKU, part number).', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Name of the stock item (e.g., USB-C Cable, HP 85A Toner Cartridge).', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity_on_hand', models.PositiveIntegerField(default=0, help_text='Current quantity in stock.')),
                ('minimum_stock_level', models.PositiveIntegerField(default=1, help_text='Minimum quantity before reordering is needed.')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price per unit.', max_digits=10, null=True)),
                ('storage_location', models.CharField(blank=True, help_text='Physical location in the warehouse (e.g., Shelf A1, Bin 3).', max_length=100, null=True)),
                ('last_restocked_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='For perishable items.', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_items', to='warehouse.stockitemcategory')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supplied_stock_items', to='warehouse.stockitemsupplier')),
            ],
            options={
                'verbose_name': 'Stock Item',
                'verbose_name_plural': 'Stock Items',
                'ordering': ['name'],
            },
        ),
    ]
